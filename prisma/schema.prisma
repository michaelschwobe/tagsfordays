// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @unique @default(cuid())
  username  String     @unique
  //
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  //
  bookmarks Bookmark[]
  password  Password?
  profile   Profile?
  tags      Tag[]
}

model Profile {
  name      String?
  email     String  @unique
  biography String?
  //
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String  @unique
}

model Password {
  hash   String
  //
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Tag {
  id        String          @id @unique @default(cuid())
  name      String          @unique
  //
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  //
  bookmarks TagOnBookmark[]
  //
  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    String
}

model TagOnBookmark {
  tag        Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tagId      String
  //
  bookmark   Bookmark @relation(fields: [bookmarkId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  bookmarkId String

  @@id([tagId, bookmarkId])
}

model Bookmark {
  id          String          @id @default(cuid())
  url         String          @unique
  title       String?
  description String?
  //
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  //
  tags        TagOnBookmark[]
  //
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String
}
